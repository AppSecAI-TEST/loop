module prelude

require `java.lang.Integer`
require `java.lang.Long`
require `java.lang.Double`
require `java.lang.String`
require `java.math.BigInteger`
require `java.math.BigDecimal`

print(object) ->
  `java.lang.System::out`.println(object.toString()),
  object

negate(b) ->
  b not true

raise(msg) ->
  `loop.runtime.Caller`.raise(msg)

# list/string extensions

last(ls) ->
  ls[ls.size() - 1]

pop(ls) ->
  ls.remove(ls.size() - 1)

push(ls, val) ->
  ls.add(val)

head(ls) ->
  ls[0]

tail(ls) ->
  ls[1..]

reverse(ls) =>
  []      : []
  [x:xs]  : reverse(xs) + [x]

embiggen(thing) =>
  Integer  : new BigInteger(thing.toString())
  Long     : new BigInteger(thing.toString())
  Double   : new BigDecimal(thing.toString())
  String   : thing.toUpperCase()

alert(msg) ->
  `javax.swing.JOptionPane`.showMessageDialog(Nothing, msg)
